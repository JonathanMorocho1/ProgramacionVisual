/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.istloja.vistas;

import com.istloja.controlador.Inventariosbd;
import com.istloja.controlador.Personabd;
import com.istloja.controlador.Proveedorbd;
import com.istloja.modelTables.ComunicacionPersona;
import java.awt.Toolkit;
import com.istloja.modelTables.ModelTableInventarios;
import com.istloja.modelTables.ModelTablePersona;
import com.istloja.modelTables.ModeloTableProveedores;
import com.istloja.modelo.Inventarios;
import com.istloja.modelo.Persona;
import com.istloja.modelo.Proveedores;
import com.istloja.modelo.Utilidades;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import java.awt.Color;
/**
 *
 * @author ANDRES
 */
public class GestionPersonaV1 extends javax.swing.JFrame implements ComunicacionPersona {

    private Utilidades utilidades;
    private Personabd controladorPersona;
    private Persona personaEditar;
    private Persona personaSeleccionada;
    //private Proveedores proveedoresEditar;
    private Inventarios inventariosEditarEliminar;
    private Proveedores proveedoresEditarEliminar;
    private GestionPersona gestionPersona;
    private GestionProveedores gestionProveedores;
    private GestionInventarios gestionInventarios;
    //private Persona personaEliminar;
    private ModelTablePersona modeloTablePersona;
    private ModeloTableProveedores modeloTableProveedores;
    private ModelTableInventarios modelTableInvetarios;
    private Proveedorbd controladorProveedor;
    private Inventariosbd controladorInventarios;
    
    /**
     * Creates new form GestionPersonaV1
     */
    public GestionPersonaV1() {
        controladorPersona = new Personabd();
        controladorProveedor = new Proveedorbd();
        controladorInventarios = new Inventariosbd();
        modeloTablePersona = new ModelTablePersona(controladorPersona.obtenerPersonas(),this);
        modeloTableProveedores = new ModeloTableProveedores(controladorProveedor.obtenerProveedores(), this);
        modelTableInvetarios = new ModelTableInventarios(controladorInventarios.obtenerInventarios(), this);
        initComponents();
        this.setLocationRelativeTo(null);
        utilidades = new Utilidades();
        gestionPersona = new GestionPersona(txtCedula,txtNombre,txtApellido,txtDireccion,txtCorreo,txtTelefono,cbxGenero,utilidades,this);
        gestionProveedores = new GestionProveedores(txtRuc, txtRazonSocial, txtTipoActividad, txtNombreRepresentanteLegal, txtApellidoRepresentanteLegal, txtTelefonoProveedores, txtCorreoProveedores, txtDireccionProveedores, utilidades, this);
        gestionInventarios = new GestionInventarios(txtCodigoProducto, txtCantidadProductos, txtDescripcion, txtPreciosCompraSinIva, txtPreciosCompraConIva, txtPrecioMayorista, txtPrecioClienteFijo, txtPrecioClienteNormal, this);
    }

    void limpiar() {
        txtCedula.setText("");
        txtNombre.setText("");
        txtApellido.setText("");
        txtDireccion.setText("");
        txtCorreo.setText("");
        txtTelefono.setText("");
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        buttonGroup1 = new javax.swing.ButtonGroup();
        tabGeneral = new javax.swing.JTabbedPane();
        panelClientes = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        panelCuerpoRegistro = new javax.swing.JPanel();
        txtNombre = new javax.swing.JTextField();
        txtCedula = new javax.swing.JTextField();
        lblCedula = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        txtApellido = new javax.swing.JTextField();
        lblApellido = new javax.swing.JLabel();
        lblDireccion = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        txtCorreo = new javax.swing.JTextField();
        lblCorreo = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        lblTelefono = new javax.swing.JLabel();
        lblGenero = new javax.swing.JLabel();
        cbxGenero = new javax.swing.JComboBox<>();
        btnEditar = new javax.swing.JButton();
        btnTraer = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaClientes = new javax.swing.JTable();
        lblBuscarClientecbx = new javax.swing.JLabel();
        cboxElegirBuscar = new javax.swing.JComboBox<>();
        txtBuscarClientescbx = new javax.swing.JTextField();
        panelProveedores = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        lblRuc = new javax.swing.JLabel();
        lblRazonSocial = new javax.swing.JLabel();
        lblTipoActividad = new javax.swing.JLabel();
        lblNombreRepresentanteLegal = new javax.swing.JLabel();
        lblApellidoRepresentanteLegal = new javax.swing.JLabel();
        lblTelefonoProveedores = new javax.swing.JLabel();
        lblCorreoProveedores = new javax.swing.JLabel();
        txtRuc = new javax.swing.JTextField();
        txtRazonSocial = new javax.swing.JTextField();
        txtTipoActividad = new javax.swing.JTextField();
        txtNombreRepresentanteLegal = new javax.swing.JTextField();
        txtApellidoRepresentanteLegal = new javax.swing.JTextField();
        txtTelefonoProveedores = new javax.swing.JTextField();
        txtCorreoProveedores = new javax.swing.JTextField();
        lblDireccionProveedores = new javax.swing.JLabel();
        txtDireccionProveedores = new javax.swing.JTextField();
        lblBuscarProveedorescbx = new javax.swing.JLabel();
        cbxElegirProveedores = new javax.swing.JComboBox<>();
        txtBuscarProveedoresCbx = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        tablaProveedores = new javax.swing.JTable();
        lblRegistroProveedores = new javax.swing.JLabel();
        btnEditarProveedores = new javax.swing.JButton();
        btnGuardarProveedores = new javax.swing.JButton();
        btnEliminarProveedores = new javax.swing.JButton();
        btnTraerProveedor = new javax.swing.JButton();
        panelInventarios = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lblCodigoProducto = new javax.swing.JLabel();
        lblDescripcion = new javax.swing.JLabel();
        lblPreciosCompraSinIva = new javax.swing.JLabel();
        lblPrecioMayorista = new javax.swing.JLabel();
        lblCantidadProductos = new javax.swing.JLabel();
        txtCodigoProducto = new javax.swing.JTextField();
        txtDescripcion = new javax.swing.JTextField();
        txtPreciosCompraSinIva = new javax.swing.JTextField();
        txtPrecioMayorista = new javax.swing.JTextField();
        txtCantidadProductos = new javax.swing.JTextField();
        lblPreciosCompraConIva = new javax.swing.JLabel();
        txtPreciosCompraConIva = new javax.swing.JTextField();
        lblPrecioClienteFijo = new javax.swing.JLabel();
        txtPrecioClienteFijo = new javax.swing.JTextField();
        lblPrecioClienteNormal = new javax.swing.JLabel();
        txtPrecioClienteNormal = new javax.swing.JTextField();
        lblBuscarInventarios = new javax.swing.JLabel();
        cbxInventarios = new javax.swing.JComboBox<>();
        txtBuscarInventarioscbx = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaInventarios = new javax.swing.JTable();
        btnGuardarInventarios = new javax.swing.JButton();
        btnEditarInventarios = new javax.swing.JButton();
        btnEliminarInventarios = new javax.swing.JButton();
        btnTraerInventario = new javax.swing.JButton();
        lblRegistroInventario = new javax.swing.JLabel();
        panelVentas = new javax.swing.JPanel();
        MenuGeneral = new javax.swing.JMenuBar();
        MenuArchivo = new javax.swing.JMenu();
        MenuItemGuardar = new javax.swing.JMenuItem();
        MenuItemEliminar = new javax.swing.JMenuItem();
        MenuItemEditar = new javax.swing.JMenuItem();
        MenuItemTraer = new javax.swing.JMenuItem();
        MenuItemSalir = new javax.swing.JMenuItem();
        MenuEditar = new javax.swing.JMenu();
        MenuItemBuscarCedula = new javax.swing.JMenuItem();
        MenuItemBuscarApellido = new javax.swing.JMenuItem();
        MenuAcerca = new javax.swing.JMenu();

        jMenu1.setText("jMenu1");

        jMenu2.setText("jMenu2");

        jMenu3.setText("jMenu3");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        panelClientes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblTitulo.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblTitulo.setText("Registro de Personas");

        panelCuerpoRegistro.setBorder(javax.swing.BorderFactory.createTitledBorder("Registro Clientes"));

        txtNombre.setToolTipText("Ingrese el nombre del Usuario");
        txtNombre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtNombreMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtNombreMouseExited(evt);
            }
        });

        txtCedula.setToolTipText("Ingrese una cédula valida");
        txtCedula.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCedulaFocusLost(evt);
            }
        });
        txtCedula.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtCedulaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtCedulaMouseExited(evt);
            }
        });

        lblCedula.setText("Cedula");

        lblNombre.setText("Nombre");

        txtApellido.setToolTipText("Ingresar el apellido del Usuario");
        txtApellido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtApellidoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtApellidoMouseExited(evt);
            }
        });

        lblApellido.setText("Apellido");

        lblDireccion.setText("Direccion");

        txtDireccion.setToolTipText("Dirección del Usuario");
        txtDireccion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtDireccionMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtDireccionMouseExited(evt);
            }
        });

        txtCorreo.setToolTipText("Ingrese el correo electronico de Usuario");
        txtCorreo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtCorreoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtCorreoMouseExited(evt);
            }
        });

        lblCorreo.setText("Correo");

        txtTelefono.setToolTipText("Ingrese el telefono del Usuario");
        txtTelefono.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtTelefonoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtTelefonoMouseExited(evt);
            }
        });
        txtTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefonoKeyTyped(evt);
            }
        });

        lblTelefono.setText("Telefono");

        lblGenero.setText("Genéro");

        cbxGenero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar:", "No definido", "Masculino", "Femenino" }));

        javax.swing.GroupLayout panelCuerpoRegistroLayout = new javax.swing.GroupLayout(panelCuerpoRegistro);
        panelCuerpoRegistro.setLayout(panelCuerpoRegistroLayout);
        panelCuerpoRegistroLayout.setHorizontalGroup(
            panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCuerpoRegistroLayout.createSequentialGroup()
                .addContainerGap(62, Short.MAX_VALUE)
                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelCuerpoRegistroLayout.createSequentialGroup()
                        .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNombre)
                            .addComponent(lblCedula))
                        .addGap(98, 98, 98)
                        .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNombre)
                            .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblApellido)
                    .addGroup(panelCuerpoRegistroLayout.createSequentialGroup()
                        .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDireccion)
                            .addComponent(lblCorreo)
                            .addComponent(lblTelefono)
                            .addComponent(lblGenero))
                        .addGap(89, 89, 89)
                        .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtDireccion, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtApellido)
                            .addComponent(txtCorreo, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtTelefono, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbxGenero, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(29, 29, 29))
        );
        panelCuerpoRegistroLayout.setVerticalGroup(
            panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCuerpoRegistroLayout.createSequentialGroup()
                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCedula, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblApellido)
                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDireccion)
                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCorreo)
                    .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTelefono)
                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGenero)
                    .addComponent(cbxGenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 17, Short.MAX_VALUE))
        );

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnTraer.setText("Traer");
        btnTraer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnTraerMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnTraerMouseReleased(evt);
            }
        });
        btnTraer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraerActionPerformed(evt);
            }
        });

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLimpiarMouseClicked(evt);
            }
        });
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        TablaClientes.setModel(modeloTablePersona
        );
        jScrollPane1.setViewportView(TablaClientes);

        lblBuscarClientecbx.setText("Buscar Cliente:");

        cboxElegirBuscar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar:", "Cedula", "Nombres", "Apellidos", "Telefono", "Correo" }));

        txtBuscarClientescbx.setToolTipText("Para realizar una busqueda ingrese un parametro");
        txtBuscarClientescbx.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarClientescbxKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout panelClientesLayout = new javax.swing.GroupLayout(panelClientes);
        panelClientes.setLayout(panelClientesLayout);
        panelClientesLayout.setHorizontalGroup(
            panelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelClientesLayout.createSequentialGroup()
                .addGroup(panelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelClientesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(panelClientesLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(panelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelClientesLayout.createSequentialGroup()
                                .addComponent(lblBuscarClientecbx)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cboxElegirBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtBuscarClientescbx, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                                .addGap(77, 77, 77))
                            .addGroup(panelClientesLayout.createSequentialGroup()
                                .addGap(68, 68, 68)
                                .addGroup(panelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelClientesLayout.createSequentialGroup()
                                        .addComponent(panelCuerpoRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(panelClientesLayout.createSequentialGroup()
                                        .addComponent(btnGuardar)
                                        .addGap(35, 35, 35)
                                        .addComponent(btnEliminar)
                                        .addGap(35, 35, 35)
                                        .addComponent(btnEditar)
                                        .addGap(35, 35, 35)
                                        .addComponent(btnLimpiar)
                                        .addGap(35, 35, 35)
                                        .addComponent(btnTraer)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, Short.MAX_VALUE)))))))
                .addContainerGap())
            .addGroup(panelClientesLayout.createSequentialGroup()
                .addGap(262, 262, 262)
                .addComponent(lblTitulo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelClientesLayout.setVerticalGroup(
            panelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelClientesLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lblTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelCuerpoRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(panelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditar)
                    .addComponent(btnGuardar)
                    .addComponent(btnEliminar)
                    .addComponent(btnLimpiar)
                    .addComponent(btnTraer))
                .addGap(18, 18, 18)
                .addGroup(panelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBuscarClientecbx)
                    .addComponent(cboxElegirBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBuscarClientescbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );

        tabGeneral.addTab("Clientes", panelClientes);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Registro Proveedores"));

        lblRuc.setText("RUC");

        lblRazonSocial.setText("Razón Social");

        lblTipoActividad.setText("Tipo de Actividad");

        lblNombreRepresentanteLegal.setText("Nombre de Representante Legal");

        lblApellidoRepresentanteLegal.setText("Apellido de Representante Legal");

        lblTelefonoProveedores.setText("Telefono");

        lblCorreoProveedores.setText("Correo");

        txtRuc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtRucMouseEntered(evt);
            }
        });
        txtRuc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtRucKeyTyped(evt);
            }
        });

        txtTelefonoProveedores.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefonoProveedoresKeyTyped(evt);
            }
        });

        lblDireccionProveedores.setText("Dirección");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTelefonoProveedores, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblApellidoRepresentanteLegal)
                    .addComponent(lblNombreRepresentanteLegal)
                    .addComponent(lblTipoActividad)
                    .addComponent(lblRazonSocial, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRuc)
                    .addComponent(lblCorreoProveedores)
                    .addComponent(lblDireccionProveedores))
                .addGap(75, 75, 75)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtRuc)
                    .addComponent(txtRazonSocial)
                    .addComponent(txtNombreRepresentanteLegal)
                    .addComponent(txtApellidoRepresentanteLegal)
                    .addComponent(txtTelefonoProveedores)
                    .addComponent(txtCorreoProveedores)
                    .addComponent(txtTipoActividad)
                    .addComponent(txtDireccionProveedores, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRuc)
                    .addComponent(txtRuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRazonSocial)
                    .addComponent(txtRazonSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTipoActividad)
                    .addComponent(txtTipoActividad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombreRepresentanteLegal)
                    .addComponent(txtNombreRepresentanteLegal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblApellidoRepresentanteLegal)
                    .addComponent(txtApellidoRepresentanteLegal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTelefonoProveedores)
                    .addComponent(txtTelefonoProveedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCorreoProveedores)
                    .addComponent(txtCorreoProveedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDireccionProveedores)
                    .addComponent(txtDireccionProveedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 12, Short.MAX_VALUE))
        );

        lblBuscarProveedorescbx.setText("Buscar Proveedores:");

        cbxElegirProveedores.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar:", "Ruc", "Nombre", " " }));

        txtBuscarProveedoresCbx.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarProveedoresCbxKeyReleased(evt);
            }
        });

        tablaProveedores.setModel(modeloTableProveedores);
        jScrollPane5.setViewportView(tablaProveedores);

        lblRegistroProveedores.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblRegistroProveedores.setText("Registro de Proveedores");

        btnEditarProveedores.setText("Editar");
        btnEditarProveedores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarProveedoresActionPerformed(evt);
            }
        });

        btnGuardarProveedores.setText("Guardar");
        btnGuardarProveedores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarProveedoresActionPerformed(evt);
            }
        });

        btnEliminarProveedores.setText("Eliminar");
        btnEliminarProveedores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarProveedoresActionPerformed(evt);
            }
        });

        btnTraerProveedor.setText("Traer");
        btnTraerProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraerProveedorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelProveedoresLayout = new javax.swing.GroupLayout(panelProveedores);
        panelProveedores.setLayout(panelProveedoresLayout);
        panelProveedoresLayout.setHorizontalGroup(
            panelProveedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelProveedoresLayout.createSequentialGroup()
                .addGroup(panelProveedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 629, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelProveedoresLayout.createSequentialGroup()
                        .addGroup(panelProveedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelProveedoresLayout.createSequentialGroup()
                                .addGap(130, 130, 130)
                                .addComponent(btnGuardarProveedores)
                                .addGap(41, 41, 41)
                                .addComponent(btnEditarProveedores)
                                .addGap(41, 41, 41)
                                .addComponent(btnEliminarProveedores)
                                .addGap(36, 36, 36)
                                .addComponent(btnTraerProveedor))
                            .addGroup(panelProveedoresLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(lblBuscarProveedorescbx)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbxElegirProveedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtBuscarProveedoresCbx, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(89, 89, 89)))
                .addContainerGap(21, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelProveedoresLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(panelProveedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelProveedoresLayout.createSequentialGroup()
                        .addComponent(lblRegistroProveedores)
                        .addGap(239, 239, 239))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelProveedoresLayout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52))))
        );
        panelProveedoresLayout.setVerticalGroup(
            panelProveedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelProveedoresLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lblRegistroProveedores)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(12, 12, 12)
                .addGroup(panelProveedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardarProveedores)
                    .addComponent(btnEditarProveedores)
                    .addComponent(btnEliminarProveedores)
                    .addComponent(btnTraerProveedor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelProveedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBuscarProveedorescbx)
                    .addComponent(cbxElegirProveedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBuscarProveedoresCbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );

        tabGeneral.addTab("Proveedores", panelProveedores);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Registro Inventarios"));

        lblCodigoProducto.setText("Codigo Producto");

        lblDescripcion.setText("Descripción");

        lblPreciosCompraSinIva.setText("Precios Compra Sin Iva");

        lblPrecioMayorista.setText("Precio Mayorista");

        lblCantidadProductos.setText("Cantidad Productos");

        txtCodigoProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodigoProductoKeyTyped(evt);
            }
        });

        lblPreciosCompraConIva.setText("Precios Compra Con Iva");

        txtPreciosCompraConIva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPreciosCompraConIvaActionPerformed(evt);
            }
        });

        lblPrecioClienteFijo.setText("Precio Cliente Fijo");

        lblPrecioClienteNormal.setText("Precio Cliente Normal");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(58, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCantidadProductos)
                    .addComponent(lblDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCodigoProducto)
                    .addComponent(lblPreciosCompraSinIva, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPreciosCompraConIva)
                    .addComponent(lblPrecioMayorista, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPrecioClienteFijo)
                    .addComponent(lblPrecioClienteNormal))
                .addGap(40, 40, 40)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtPrecioMayorista)
                    .addComponent(txtPreciosCompraSinIva, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCodigoProducto, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDescripcion, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCantidadProductos)
                    .addComponent(txtPreciosCompraConIva)
                    .addComponent(txtPrecioClienteFijo)
                    .addComponent(txtPrecioClienteNormal, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCodigoProducto)
                    .addComponent(txtCodigoProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCantidadProductos)
                    .addComponent(txtCantidadProductos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDescripcion)
                    .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPreciosCompraSinIva)
                    .addComponent(txtPreciosCompraSinIva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPreciosCompraConIva)
                    .addComponent(txtPreciosCompraConIva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrecioMayorista)
                    .addComponent(txtPrecioMayorista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrecioClienteFijo)
                    .addComponent(txtPrecioClienteFijo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrecioClienteNormal)
                    .addComponent(txtPrecioClienteNormal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        lblBuscarInventarios.setText("Buscar Inventarios:");

        cbxInventarios.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar:", "Codigo", "Descripción" }));

        txtBuscarInventarioscbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarInventarioscbxActionPerformed(evt);
            }
        });
        txtBuscarInventarioscbx.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarInventarioscbxKeyReleased(evt);
            }
        });

        tablaInventarios.setModel(modelTableInvetarios);
        jScrollPane3.setViewportView(tablaInventarios);

        btnGuardarInventarios.setText("Guardar");
        btnGuardarInventarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarInventariosActionPerformed(evt);
            }
        });

        btnEditarInventarios.setText("Editar");
        btnEditarInventarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarInventariosActionPerformed(evt);
            }
        });

        btnEliminarInventarios.setText("Eliminar");
        btnEliminarInventarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarInventariosActionPerformed(evt);
            }
        });

        btnTraerInventario.setText("Traer");
        btnTraerInventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraerInventarioActionPerformed(evt);
            }
        });

        lblRegistroInventario.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblRegistroInventario.setText("Registro de Proveedores");

        javax.swing.GroupLayout panelInventariosLayout = new javax.swing.GroupLayout(panelInventarios);
        panelInventarios.setLayout(panelInventariosLayout);
        panelInventariosLayout.setHorizontalGroup(
            panelInventariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInventariosLayout.createSequentialGroup()
                .addGroup(panelInventariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelInventariosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3))
                    .addGroup(panelInventariosLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(lblBuscarInventarios)
                        .addGap(18, 18, 18)
                        .addGroup(panelInventariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelInventariosLayout.createSequentialGroup()
                                .addComponent(btnGuardarInventarios)
                                .addGap(41, 41, 41)
                                .addComponent(btnEditarInventarios)
                                .addGap(41, 41, 41)
                                .addComponent(btnEliminarInventarios)
                                .addGap(41, 41, 41)
                                .addComponent(btnTraerInventario))
                            .addGroup(panelInventariosLayout.createSequentialGroup()
                                .addComponent(cbxInventarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtBuscarInventarioscbx, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 30, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelInventariosLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblRegistroInventario)
                .addGap(247, 247, 247))
            .addGroup(panelInventariosLayout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelInventariosLayout.setVerticalGroup(
            panelInventariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInventariosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblRegistroInventario)
                .addGap(9, 9, 9)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInventariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelInventariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnGuardarInventarios)
                        .addComponent(btnEditarInventarios)
                        .addComponent(btnEliminarInventarios))
                    .addComponent(btnTraerInventario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelInventariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBuscarInventarios)
                    .addComponent(cbxInventarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBuscarInventarioscbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        tabGeneral.addTab("Inventario", panelInventarios);

        javax.swing.GroupLayout panelVentasLayout = new javax.swing.GroupLayout(panelVentas);
        panelVentas.setLayout(panelVentasLayout);
        panelVentasLayout.setHorizontalGroup(
            panelVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 678, Short.MAX_VALUE)
        );
        panelVentasLayout.setVerticalGroup(
            panelVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 603, Short.MAX_VALUE)
        );

        tabGeneral.addTab("Venta", panelVentas);

        MenuGeneral.setForeground(new java.awt.Color(60, 63, 65));
        MenuGeneral.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        MenuArchivo.setText("Archivo");
        MenuArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuArchivoActionPerformed(evt);
            }
        });

        MenuItemGuardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        MenuItemGuardar.setText("Guardar");
        MenuItemGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemGuardarActionPerformed(evt);
            }
        });
        MenuArchivo.add(MenuItemGuardar);

        MenuItemEliminar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        MenuItemEliminar.setText("Eliminar");
        MenuItemEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemEliminarActionPerformed(evt);
            }
        });
        MenuArchivo.add(MenuItemEliminar);

        MenuItemEditar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        MenuItemEditar.setText("Editar");
        MenuItemEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemEditarActionPerformed(evt);
            }
        });
        MenuArchivo.add(MenuItemEditar);

        MenuItemTraer.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_MASK));
        MenuItemTraer.setText("Traer");
        MenuItemTraer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemTraerActionPerformed(evt);
            }
        });
        MenuArchivo.add(MenuItemTraer);

        MenuItemSalir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        MenuItemSalir.setText("Salir");
        MenuItemSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemSalirActionPerformed(evt);
            }
        });
        MenuArchivo.add(MenuItemSalir);

        MenuGeneral.add(MenuArchivo);

        MenuEditar.setText("Busqueda");

        MenuItemBuscarCedula.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_MASK));
        MenuItemBuscarCedula.setText("Buscar por Cedula");
        MenuItemBuscarCedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemBuscarCedulaActionPerformed(evt);
            }
        });
        MenuEditar.add(MenuItemBuscarCedula);

        MenuItemBuscarApellido.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        MenuItemBuscarApellido.setText("Buscar por Apellido");
        MenuItemBuscarApellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemBuscarApellidoActionPerformed(evt);
            }
        });
        MenuEditar.add(MenuItemBuscarApellido);

        MenuGeneral.add(MenuEditar);

        MenuAcerca.setText("Acerca de");
        MenuGeneral.add(MenuAcerca);

        setJMenuBar(MenuGeneral);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabGeneral)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tabGeneral, javax.swing.GroupLayout.PREFERRED_SIZE, 629, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void MenuArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuArchivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MenuArchivoActionPerformed

    private void MenuItemSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemSalirActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_MenuItemSalirActionPerformed

    private void MenuItemEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemEditarActionPerformed
        // TODO add your handling code here:
       EditarPersona();
    }//GEN-LAST:event_MenuItemEditarActionPerformed

    private void MenuItemEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemEliminarActionPerformed
        // TODO add your handling code here:
        EliminarPersona();
    }//GEN-LAST:event_MenuItemEliminarActionPerformed

    private void MenuItemBuscarApellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemBuscarApellidoActionPerformed
        // TODO add your handling code here:
        BuscarPersonaApellido();
    }//GEN-LAST:event_MenuItemBuscarApellidoActionPerformed

    private void MenuItemGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemGuardarActionPerformed
        // TODO add your handling code here:
        GuardarPersona();
    }//GEN-LAST:event_MenuItemGuardarActionPerformed

    private void MenuItemTraerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemTraerActionPerformed
        // TODO add your handling code here:
        TraerPersona();
    }//GEN-LAST:event_MenuItemTraerActionPerformed

    private void MenuItemBuscarCedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemBuscarCedulaActionPerformed
        // TODO add your handling code here:
        BuscarPersonaCedula();
    }//GEN-LAST:event_MenuItemBuscarCedulaActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        GuardarPersona();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        EliminarPersona();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnTraerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraerActionPerformed
        // TODO add your handling code here:
        TraerPersona();
    }//GEN-LAST:event_btnTraerActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        EditarPersona();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnGuardarProveedoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarProveedoresActionPerformed
        // TODO add your handling code here:
        GuardarProveedores();               
    }//GEN-LAST:event_btnGuardarProveedoresActionPerformed

    private void btnEditarProveedoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarProveedoresActionPerformed
        // TODO add your handling code here:
        EditarProveedor();
    }//GEN-LAST:event_btnEditarProveedoresActionPerformed

    private void btnTraerProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraerProveedorActionPerformed
        // TODO add your handling code here:
        TraerProveedor();
    }//GEN-LAST:event_btnTraerProveedorActionPerformed

    private void btnEliminarProveedoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarProveedoresActionPerformed
        // TODO add your handling code here:
        EliminarProveedores();
    }//GEN-LAST:event_btnEliminarProveedoresActionPerformed

    private void btnGuardarInventariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarInventariosActionPerformed
        // TODO add your handling code here:
        GuardarInventarios();
    }//GEN-LAST:event_btnGuardarInventariosActionPerformed

    private void btnEditarInventariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarInventariosActionPerformed
        // TODO add your handling code here:
        EditarInventario();
    }//GEN-LAST:event_btnEditarInventariosActionPerformed

    private void btnEliminarInventariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarInventariosActionPerformed
        // TODO add your handling code here:
        EliminarInventario();
    }//GEN-LAST:event_btnEliminarInventariosActionPerformed

    private void txtBuscarInventarioscbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarInventarioscbxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarInventarioscbxActionPerformed

    private void btnTraerInventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraerInventarioActionPerformed
        // TODO add your handling code here:
        TraerInventario();
    }//GEN-LAST:event_btnTraerInventarioActionPerformed

    private void txtCodigoProductoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoProductoKeyTyped
        // TODO add your handling code here:
       char c = evt.getKeyChar();
            if (Character.isLetter(c)) {
                getToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(null, "Solo digite números");
            } else if (txtCodigoProducto.getText().length() >= 10) {
                evt.consume();
                Toolkit.getDefaultToolkit().beep();
            }
    }//GEN-LAST:event_txtCodigoProductoKeyTyped

    private void txtCedulaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCedulaFocusLost
        // TODO add your handling code here:
        if (txtCedula.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "El campo cedula no tiene datos", "Error", JOptionPane.ERROR_MESSAGE);
            txtCedula.requestFocus();
        }
        if (!utilidades.validadorDeCedula(txtCedula.getText())) {
            JOptionPane.showMessageDialog(this, "La CEDULA ingresada no es valida", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtCedulaFocusLost
            
    private void txtBuscarClientescbxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarClientescbxKeyReleased
        // TODO add your handling code here:
        buscarClienteCombo();
    }//GEN-LAST:event_txtBuscarClientescbxKeyReleased

    private void txtBuscarProveedoresCbxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarProveedoresCbxKeyReleased
        // TODO add your handling code here:
        buscarProveedorCombo();
    }//GEN-LAST:event_txtBuscarProveedoresCbxKeyReleased

    private void txtBuscarInventarioscbxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarInventarioscbxKeyReleased
        // TODO add your handling code here:
        buscarInventarioCombo();
    }//GEN-LAST:event_txtBuscarInventarioscbxKeyReleased

    private void txtTelefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
            if (Character.isLetter(c)) {
                getToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(null, "Solo digite números");
            } else if (txtTelefono.getText().length() >= 10) {
                evt.consume();
                Toolkit.getDefaultToolkit().beep();
            }
    }//GEN-LAST:event_txtTelefonoKeyTyped

    private void txtRucKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRucKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
            if (Character.isLetter(c)) {
                getToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(null, "Solo digite números");
            } else if (txtRuc.getText().length() >= 10) {
                evt.consume();
                Toolkit.getDefaultToolkit().beep();
            }
    }//GEN-LAST:event_txtRucKeyTyped

    private void txtTelefonoProveedoresKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoProveedoresKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
            if (Character.isLetter(c)) {
                getToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(null, "Solo digite números");
            } else if (txtTelefonoProveedores.getText().length() >= 10) {
                evt.consume();
                Toolkit.getDefaultToolkit().beep();
            }
    }//GEN-LAST:event_txtTelefonoProveedoresKeyTyped
    //<editor-fold defaultstate="collapsed" desc="Generated Code">
    private void txtCedulaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCedulaMouseEntered
        // TODO add your handling code here:
        txtCedula.setBackground(new Color(153, 204, 255));
    }//GEN-LAST:event_txtCedulaMouseEntered

    private void txtCedulaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCedulaMouseExited
        // TODO add your handling code here:
        txtCedula.setBackground(Color.WHITE);
    }//GEN-LAST:event_txtCedulaMouseExited

    private void btnLimpiarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimpiarMouseClicked
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(rootPane, "Se han limpiado los campos");
    }//GEN-LAST:event_btnLimpiarMouseClicked

    private void btnTraerMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTraerMousePressed
        // TODO add your handling code here:
        btnTraer.setBackground(Color.RED);
    }//GEN-LAST:event_btnTraerMousePressed

    private void btnTraerMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTraerMouseReleased
        // TODO add your handling code here:
        btnTraer.setBackground(Color.WHITE);
    }//GEN-LAST:event_btnTraerMouseReleased

    private void txtNombreMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtNombreMouseEntered
        // TODO add your handling code here:
        txtNombre.setBackground(new Color(153, 204, 255));
    }//GEN-LAST:event_txtNombreMouseEntered

    private void txtNombreMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtNombreMouseExited
        // TODO add your handling code here:
        txtNombre.setBackground(Color.WHITE);
    }//GEN-LAST:event_txtNombreMouseExited

    private void txtApellidoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtApellidoMouseEntered
        // TODO add your handling code here:
        txtApellido.setBackground(new Color(153, 204, 255));
    }//GEN-LAST:event_txtApellidoMouseEntered

    private void txtApellidoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtApellidoMouseExited
        // TODO add your handling code here:
        txtApellido.setBackground(Color.WHITE);
    }//GEN-LAST:event_txtApellidoMouseExited

    private void txtDireccionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDireccionMouseEntered
        // TODO add your handling code here:
        txtDireccion.setBackground(new Color(153, 204, 255));
    }//GEN-LAST:event_txtDireccionMouseEntered

    private void txtDireccionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDireccionMouseExited
        // TODO add your handling code here:
        txtDireccion.setBackground(Color.WHITE);
    }//GEN-LAST:event_txtDireccionMouseExited

    private void txtCorreoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCorreoMouseEntered
        // TODO add your handling code here:
        txtCorreo.setBackground(new Color(153, 204, 255));
    }//GEN-LAST:event_txtCorreoMouseEntered

    private void txtCorreoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCorreoMouseExited
        // TODO add your handling code here:
        txtCorreo.setBackground(Color.WHITE);
    }//GEN-LAST:event_txtCorreoMouseExited

    private void txtTelefonoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTelefonoMouseEntered
        // TODO add your handling code here:
        txtTelefono.setBackground(new Color(153, 204, 255));
    }//GEN-LAST:event_txtTelefonoMouseEntered

    private void txtTelefonoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTelefonoMouseExited
        // TODO add your handling code here:
        txtTelefono.setBackground(Color.WHITE);
    }//GEN-LAST:event_txtTelefonoMouseExited

    private void txtRucMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtRucMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRucMouseEntered

    private void txtPreciosCompraConIvaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPreciosCompraConIvaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPreciosCompraConIvaActionPerformed
    //</editor-fold>
//------------------------------------------------------------------------------------------------------------------------  
    
    //METODOS PARA QUE FUNCIONEN LOS BOTONES DEL MODULO PERSONAS CLIENTES
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    //METODO PARA GUARDAR UNA PERSONA
    public void GuardarPersona(){
    if(controladorPersona.buscarPersonasCedula(txtCedula.getText()) != null ){
            JOptionPane.showMessageDialog(rootPane, "La Persona con ese numero ya se encuentra registrada en el sistema");
        }else{
            Persona personaGuardar = gestionPersona.guardarEditar();
            if(personaGuardar != null){    
                if (controladorPersona.CrearPersona(personaGuardar)) {
                JOptionPane.showMessageDialog(rootPane, "Persona registrada en el sistema");
                limpiar();
                actualizarTabla();
                } else {
                    JOptionPane.showMessageDialog(rootPane, "No se puede guardar la person", "Errror", JOptionPane.ERROR_MESSAGE);
                }
            
        
            }    
        }
    }        
    //METODO PARA EDITAR UNA PERSONA.
    public void EditarPersona(){
        if(personaEditar == null){
            JOptionPane.showMessageDialog(rootPane, "No hay una persona para editar", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Persona personaEditarLocal = gestionPersona.guardarEditar();
        if(personaEditarLocal != null){
            personaEditarLocal.setIdPersona(personaEditar.getIdPersona());
            if(controladorPersona.EditarPersona(personaEditarLocal)){
                JOptionPane.showMessageDialog(rootPane, "Editado Correctamente");
                limpiar();
                personaEditar = null;
                actualizarTabla();
            }else{
                JOptionPane.showMessageDialog(rootPane, "No se puede editar la persona");
            }
        }
    }
        
    void actualizarTabla(){
        List<Persona> tablaActualizada = controladorPersona.obtenerPersonas();
        
        modeloTablePersona.setPersonas(tablaActualizada);
        modeloTablePersona.fireTableDataChanged();
    }
    //METODO PARA TRAER UNA PERSONA.
    public void TraerPersona(){
        List<Persona> obtenerPersonas = controladorPersona.obtenerPersonas();
        personaEditar = obtenerPersonas.get(obtenerPersonas.size()-1);
        txtCedula.setText(personaEditar.getCedula());
        txtNombre.setText(personaEditar.getNombre());
        txtApellido.setText(personaEditar.getApellidos());
        txtDireccion.setText(personaEditar.getDireccion());
        txtCorreo.setText(personaEditar.getCorreo());
        txtTelefono.setText(personaEditar.getTelefono());
        cbxGenero.setSelectedItem(personaEditar.getGenero());
    }
    
    //METODO PARA BUSCAR A UNA PERSONA POR LA CEDULA.
    public void BuscarPersonaCedula(){
        personaEditar = controladorPersona.buscarPersonasCedula(txtCedula.getText());
        if(personaEditar != null){
            txtCedula.setText(personaEditar.getCedula());
            txtNombre.setText(personaEditar.getNombre());
            txtApellido.setText(personaEditar.getApellidos());
            txtDireccion.setText(personaEditar.getDireccion());
            txtCorreo.setText(personaEditar.getCorreo());
            txtTelefono.setText(personaEditar.getTelefono());
        
        }else{
            JOptionPane.showMessageDialog(rootPane, "No se encontro la persona con ese numero de CEDULA en la base de Datos", "Errror", JOptionPane.ERROR_MESSAGE);
            txtCedula.setText("");
            txtCedula.requestFocus();
        }
    }
    
    //METODO PARA ELIMINAR UNA PERSONA.
    public void EliminarPersona(){
        if(personaEditar != null){
            if(controladorPersona.EliminarPersona(personaEditar)){
                JOptionPane.showMessageDialog(rootPane, "Eliminado Correctamente");
                limpiar();
                //personaEditar = null;
                 actualizarTabla();
            }else{
                JOptionPane.showMessageDialog(rootPane, "No se pudo ELIMINAR SOURCE la Persona");
                actualizarTabla();
            }
        }else{
            JOptionPane.showMessageDialog(rootPane, "No hay persona");
            actualizarTabla();
            }
    }
    
    public void ValoresPersona(Persona p) {
        System.out.println("Persona"+ p.toString());
        
        txtCedula.setText(p.getCedula());
        txtNombre.setText(p.getNombre());
        txtApellido.setText(p.getApellidos());
        txtDireccion.setText(p.getDireccion());
        txtCorreo.setText(p.getCorreo());
        txtTelefono.setText(p.getTelefono());
        cbxGenero.setSelectedItem(p.getGenero());
        personaEditar = p;
    }
    
    //METODO PARA BUSCAR A PERSONA POR APELLIDO.
    public void BuscarPersonaApellido(){
        personaEditar = controladorPersona.buscarPersonasApellido(txtApellido.getText());
        if(personaEditar != null){
            txtCedula.setText(personaEditar.getCedula());
            txtNombre.setText(personaEditar.getNombre());
            txtApellido.setText(personaEditar.getApellidos());
            txtDireccion.setText(personaEditar.getDireccion());
            txtCorreo.setText(personaEditar.getCorreo());
            txtTelefono.setText(personaEditar.getTelefono());
        
        }else{
            JOptionPane.showMessageDialog(rootPane, "No se encontro la persona con ese APELLIDO en la base de Datos", "Errror", JOptionPane.ERROR_MESSAGE);
            txtApellido.setText(null);
            txtApellido.requestFocus();
        }
    }
    
    public void buscarClienteCombo(){
        switch(cboxElegirBuscar.getSelectedIndex()){
            case 1:
                modeloTablePersona.setPersonas(controladorPersona.buscarPersonasCedulaLista(txtBuscarClientescbx.getText()));
                modeloTablePersona.fireTableDataChanged();
                break;
            case 2:
                modeloTablePersona.setPersonas(controladorPersona.buscarPersonasNombre(txtBuscarClientescbx.getText()));
                modeloTablePersona.fireTableDataChanged();
                break;
            case 3:
                break;
        }
    }
    // </editor-fold>
    //FIN METODOS PERSONAS
    
    
    
    //METODOS PARA QUE FUNCIONES LOS BOTONES DEL MODULO PROVEEDORES
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    public void buscarProveedorCombo(){
        switch(cbxElegirProveedores.getSelectedIndex()){
            case 0:
                modeloTableProveedores.fireTableDataChanged();
                break;
            case 1:
                modeloTableProveedores.setProveedores(controladorProveedor.buscarProveedoresRucCombo(txtBuscarProveedoresCbx.getText()));
                modeloTableProveedores.fireTableDataChanged();
                break;
            case 2:
                modeloTableProveedores.setProveedores(controladorProveedor.buscarProveedoresNombreCombo(txtBuscarProveedoresCbx.getText()));
                modeloTableProveedores.fireTableDataChanged();
                break;
        }
    }
    public void GuardarProveedores(){    
        Proveedores proveedores = new Proveedores();
        proveedores.setRuc(txtRuc.getText());
        proveedores.setRazonSocial(txtRazonSocial.getText());
        proveedores.setTipoActividad(txtTipoActividad.getText());
        proveedores.setNombreRepresentanteLegal(txtNombreRepresentanteLegal.getText());
        proveedores.setApellidoRepresentanteLegal(txtApellidoRepresentanteLegal.getText());
        proveedores.setTelefonoProveedor(txtTelefonoProveedores.getText());
        proveedores.setCorreoProveedores(txtCorreoProveedores.getText());
        proveedores.setDireccionProveedores(txtDireccionProveedores.getText());
        if (controladorProveedor.RegistrarProveedor(proveedores)) {
            JOptionPane.showMessageDialog(rootPane, "Proveedor guardado con éxito del sitema.");
            limpiarCamposProveedor();
            modeloTableProveedores.setProveedores(controladorProveedor.obtenerProveedores());
            modeloTableProveedores.fireTableDataChanged();
        } else {
            JOptionPane.showMessageDialog(rootPane, "No se puede guardar el proveedor.", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }    
    
    public void EditarProveedor(){
        if(proveedoresEditarEliminar == null){
            JOptionPane.showMessageDialog(rootPane, "No hay una proveedor para editar", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Proveedores proveedoresEditarLocal = gestionProveedores.guardarEditarProveedores();
        if(proveedoresEditarLocal != null){
            proveedoresEditarLocal.setIdProveedores(proveedoresEditarEliminar.getIdProveedores());
            if(controladorProveedor.EditarProveedores(proveedoresEditarLocal)){
                JOptionPane.showMessageDialog(rootPane, "Editado Correctamente");
                limpiarCamposProveedor();
                proveedoresEditarEliminar = null;
                actualizarTablaProveedores();
            }else{
                JOptionPane.showMessageDialog(rootPane, "No se puede editar el PROVEEDOR SOURCE");
            }
            
        }
    }
    public void EliminarProveedores(){
        if(proveedoresEditarEliminar == null){
            JOptionPane.showMessageDialog(rootPane, "No hay una persona para ELIMINAR SOURCE", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Proveedores proveedoresEliminarLocal = gestionProveedores.guardarEditarProveedores();
        if(proveedoresEliminarLocal != null){
            proveedoresEliminarLocal.setIdProveedores(proveedoresEditarEliminar.getIdProveedores());
            if(controladorProveedor.EliminarProveedores(proveedoresEliminarLocal)){
                JOptionPane.showMessageDialog(rootPane, "Eliminado Correctamente");
                limpiarCamposProveedor();
                proveedoresEditarEliminar = null;
                actualizarTablaProveedores();
            }else{
                JOptionPane.showMessageDialog(rootPane, "No se pudo ELIMINAR la Persona SOURCE", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }
    
    public void TraerProveedor(){
        List<Proveedores> obtenerProveedores = controladorProveedor.obtenerProveedores();
        proveedoresEditarEliminar = obtenerProveedores.get(obtenerProveedores.size()-1);
        txtRuc.setText(proveedoresEditarEliminar.getRuc());
        txtRazonSocial.setText(proveedoresEditarEliminar.getRazonSocial());
        txtTipoActividad.setText(proveedoresEditarEliminar.getTipoActividad());
        txtNombreRepresentanteLegal.setText(proveedoresEditarEliminar.getNombreRepresentanteLegal());
        txtApellidoRepresentanteLegal.setText(proveedoresEditarEliminar.getApellidoRepresentanteLegal());
        txtTelefonoProveedores.setText(proveedoresEditarEliminar.getTelefonoProveedor());
        txtCorreoProveedores.setText(proveedoresEditarEliminar.getCorreoProveedores());
        txtDireccionProveedores.setText(proveedoresEditarEliminar.getDireccionProveedores());
    }
    void limpiarCamposProveedor() {
        txtRuc.setText("");
        txtRazonSocial.setText("");
        txtTipoActividad.setText("");
        txtNombreRepresentanteLegal.setText("");
        txtApellidoRepresentanteLegal.setText("");
        txtTelefonoProveedores.setText("");
        txtCorreoProveedores.setText("");
        txtDireccionProveedores.setText("");
    }
    
    void actualizarTablaProveedores(){
        List<Proveedores> tablaActualizadaProveedores = controladorProveedor.obtenerProveedores();
        
        modeloTableProveedores.setProveedores(tablaActualizadaProveedores);
        modeloTableProveedores.fireTableDataChanged();
    }
    // </editor-fold>
    //FIN DE METODO PROVEEDORES
    
    
    
    //METODOS PARA QUE FUNCIONEN LOS BOTONES DEL MODULO INVENTARIOS
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    public void buscarInventarioCombo(){
        switch(cbxInventarios.getSelectedIndex()){
            case 0:
                modelTableInvetarios.fireTableDataChanged();
                break;
            case 1:
                modelTableInvetarios.setInventarios(controladorInventarios.buscarInvetarioCodigoCombo(txtBuscarInventarioscbx.getText()));
                modelTableInvetarios.fireTableDataChanged();
                break;
            case 2:
                modelTableInvetarios.setInventarios(controladorInventarios.buscarInvetarioDescripcionCombo(txtBuscarInventarioscbx.getText()));
                modelTableInvetarios.fireTableDataChanged();
                break;
        }
    }
    public void GuardarInventarios(){
        Inventarios inventarios = new Inventarios();
        inventarios.setCodigoProducto(txtCodigoProducto.getText());
        inventarios.setCantidadProductos(txtCantidadProductos.getText());
        inventarios.setDescripcion(txtDescripcion.getText());
        inventarios.setPreciosCompra_sinIva(txtPreciosCompraSinIva.getText());
        inventarios.setPreciosCompra_conIva(txtPreciosCompraConIva.getText());
        inventarios.setPrecioMayorista(txtPrecioMayorista.getText());
        inventarios.setPrecioClienteFijo(txtPrecioClienteFijo.getText());
        inventarios.setPrecioClienteNormal(txtPrecioClienteNormal.getText());
        if (controladorInventarios.CrearInventario(inventarios)) {
            JOptionPane.showMessageDialog(rootPane, "Inventario guardado con éxito del sitema.");
            //limpiarCamposInventarios();
            modelTableInvetarios.setInventarios(controladorInventarios.obtenerInventarios());
            limpiarCamposInventarios();
            modelTableInvetarios.fireTableDataChanged();
        } else {
            JOptionPane.showMessageDialog(rootPane, "No se puede guardar el proveedor.", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public void EditarInventario(){
        if(inventariosEditarEliminar == null){
            JOptionPane.showMessageDialog(rootPane, "No hay un Inventario para editar", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Inventarios inventariosEditarLocal = gestionInventarios.guardarEditarInventario();//ME FALTA EL METODO PARA LOS CAMPOS
        if(inventariosEditarLocal != null){
            inventariosEditarLocal.setIdInventario(inventariosEditarEliminar.getIdInventario());
            if(controladorInventarios.EditarInventarios(inventariosEditarLocal)){
                JOptionPane.showMessageDialog(rootPane, "Editado Correctamente");
                limpiarCamposInventarios();
                inventariosEditarEliminar = null;
                actualizarTablaInventarios();
            }
        }
    }
    public void EliminarInventario(){
        if(inventariosEditarEliminar == null){
            JOptionPane.showMessageDialog(rootPane, "No hay una persona para Eliminar", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Inventarios inventariosEliminarLocal = gestionInventarios.guardarEditarInventario();
        if(inventariosEliminarLocal != null){
            inventariosEliminarLocal.setIdInventario(inventariosEditarEliminar.getIdInventario());
            if(controladorInventarios.EliminarInventarios(inventariosEliminarLocal)){
                JOptionPane.showMessageDialog(rootPane, "Eliminado Correctamente");
                limpiarCamposProveedor();
                inventariosEditarEliminar = null;
                actualizarTablaInventarios();
            }else{
                JOptionPane.showMessageDialog(rootPane, "No se pudo ELIMINAR SOURCE la Inventario", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }
    void actualizarTablaInventarios(){
        List<Inventarios> tablaActualizadaInventarios = controladorInventarios.obtenerInventarios();
        
        modelTableInvetarios.setInventarios(tablaActualizadaInventarios);
        modelTableInvetarios.fireTableDataChanged();
    }
    
    //METODO PARA TRAER UN INVENTARIO.
    public void TraerInventario(){
        List<Inventarios> obtenerInventarios = controladorInventarios.obtenerInventarios();
        inventariosEditarEliminar = obtenerInventarios.get(obtenerInventarios.size()-1);
        txtCodigoProducto.setText(inventariosEditarEliminar.getCodigoProducto());
        txtCantidadProductos.setText(inventariosEditarEliminar.getCantidadProductos());
        txtDescripcion.setText(inventariosEditarEliminar.getDescripcion());
        txtPreciosCompraSinIva.setText(inventariosEditarEliminar.getPreciosCompra_sinIva());
        txtPreciosCompraConIva.setText(inventariosEditarEliminar.getPreciosCompra_conIva());
        txtPrecioMayorista.setText(inventariosEditarEliminar.getPrecioMayorista());
        txtPrecioClienteFijo.setText(inventariosEditarEliminar.getPrecioClienteFijo());
        txtPrecioClienteNormal.setText(inventariosEditarEliminar.getPrecioClienteNormal());
    }
    void limpiarCamposInventarios() {
        txtCodigoProducto.setText("");
        txtCantidadProductos.setText("");
        txtDescripcion.setText("");
        txtPreciosCompraSinIva.setText("");
        txtPreciosCompraConIva.setText("");
        txtPrecioMayorista.setText("");
        txtPrecioClienteFijo.setText("");
        txtPrecioClienteNormal.setText("");
    }
            
    // </editor-fold>
    //FIN METODOS INVENTARIOS
    
    
 
//------------------------------------------------------------------------------------------------------------------------
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionPersonaV1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionPersonaV1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionPersonaV1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionPersonaV1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestionPersonaV1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu MenuAcerca;
    private javax.swing.JMenu MenuArchivo;
    private javax.swing.JMenu MenuEditar;
    private javax.swing.JMenuBar MenuGeneral;
    private javax.swing.JMenuItem MenuItemBuscarApellido;
    private javax.swing.JMenuItem MenuItemBuscarCedula;
    private javax.swing.JMenuItem MenuItemEditar;
    private javax.swing.JMenuItem MenuItemEliminar;
    private javax.swing.JMenuItem MenuItemGuardar;
    private javax.swing.JMenuItem MenuItemSalir;
    private javax.swing.JMenuItem MenuItemTraer;
    private javax.swing.JTable TablaClientes;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEditarInventarios;
    private javax.swing.JButton btnEditarProveedores;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnEliminarInventarios;
    private javax.swing.JButton btnEliminarProveedores;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnGuardarInventarios;
    private javax.swing.JButton btnGuardarProveedores;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnTraer;
    private javax.swing.JButton btnTraerInventario;
    private javax.swing.JButton btnTraerProveedor;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cboxElegirBuscar;
    private javax.swing.JComboBox<String> cbxElegirProveedores;
    private javax.swing.JComboBox<String> cbxGenero;
    private javax.swing.JComboBox<String> cbxInventarios;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblApellido;
    private javax.swing.JLabel lblApellidoRepresentanteLegal;
    private javax.swing.JLabel lblBuscarClientecbx;
    private javax.swing.JLabel lblBuscarInventarios;
    private javax.swing.JLabel lblBuscarProveedorescbx;
    private javax.swing.JLabel lblCantidadProductos;
    private javax.swing.JLabel lblCedula;
    private javax.swing.JLabel lblCodigoProducto;
    private javax.swing.JLabel lblCorreo;
    private javax.swing.JLabel lblCorreoProveedores;
    private javax.swing.JLabel lblDescripcion;
    private javax.swing.JLabel lblDireccion;
    private javax.swing.JLabel lblDireccionProveedores;
    private javax.swing.JLabel lblGenero;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblNombreRepresentanteLegal;
    private javax.swing.JLabel lblPrecioClienteFijo;
    private javax.swing.JLabel lblPrecioClienteNormal;
    private javax.swing.JLabel lblPrecioMayorista;
    private javax.swing.JLabel lblPreciosCompraConIva;
    private javax.swing.JLabel lblPreciosCompraSinIva;
    private javax.swing.JLabel lblRazonSocial;
    private javax.swing.JLabel lblRegistroInventario;
    private javax.swing.JLabel lblRegistroProveedores;
    private javax.swing.JLabel lblRuc;
    private javax.swing.JLabel lblTelefono;
    private javax.swing.JLabel lblTelefonoProveedores;
    private javax.swing.JLabel lblTipoActividad;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JPanel panelClientes;
    private javax.swing.JPanel panelCuerpoRegistro;
    private javax.swing.JPanel panelInventarios;
    private javax.swing.JPanel panelProveedores;
    private javax.swing.JPanel panelVentas;
    private javax.swing.JTabbedPane tabGeneral;
    private javax.swing.JTable tablaInventarios;
    private javax.swing.JTable tablaProveedores;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtApellidoRepresentanteLegal;
    private javax.swing.JTextField txtBuscarClientescbx;
    private javax.swing.JTextField txtBuscarInventarioscbx;
    private javax.swing.JTextField txtBuscarProveedoresCbx;
    private javax.swing.JTextField txtCantidadProductos;
    private javax.swing.JTextField txtCedula;
    private javax.swing.JTextField txtCodigoProducto;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtCorreoProveedores;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtDireccionProveedores;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNombreRepresentanteLegal;
    private javax.swing.JTextField txtPrecioClienteFijo;
    private javax.swing.JTextField txtPrecioClienteNormal;
    private javax.swing.JTextField txtPrecioMayorista;
    private javax.swing.JTextField txtPreciosCompraConIva;
    private javax.swing.JTextField txtPreciosCompraSinIva;
    private javax.swing.JTextField txtRazonSocial;
    private javax.swing.JTextField txtRuc;
    private javax.swing.JTextField txtTelefono;
    private javax.swing.JTextField txtTelefonoProveedores;
    private javax.swing.JTextField txtTipoActividad;
    // End of variables declaration//GEN-END:variables

    //SETEAR EN LA CAJA
    @Override
    public void clickPersona(Persona p) {
        //System.out.println("Persona"+ p.toString());
        txtCedula.setText(p.getCedula());
        txtNombre.setText(p.getNombre());
        txtApellido.setText(p.getApellidos());
        txtDireccion.setText(p.getDireccion());
        txtCorreo.setText(p.getCorreo());
        txtTelefono.setText(p.getTelefono());
        personaEditar = p;
    }
    
    //SETEAR EN LA CAJA
    @Override
    public void clickProveedores(Proveedores pr) {
        System.out.println("Proveedores"+ pr.toString());
        txtRuc.setText(pr.getRuc());
        txtRazonSocial.setText(pr.getRazonSocial());
        txtTipoActividad.setText(pr.getTipoActividad());
        txtNombreRepresentanteLegal.setText(pr.getNombreRepresentanteLegal());
        txtApellidoRepresentanteLegal.setText(pr.getApellidoRepresentanteLegal());
        txtTelefonoProveedores.setText(pr.getTelefonoProveedor());
        txtCorreoProveedores.setText(pr.getCorreoProveedores());
        txtDireccionProveedores.setText(pr.getDireccionProveedores());
        proveedoresEditarEliminar = pr;
    }

    @Override
    public void clickInventarios(Inventarios i) {
        System.out.println("Inventarios"+i.toString());
        txtCodigoProducto.setText(i.getCodigoProducto());
        txtCantidadProductos.setText(i.getCantidadProductos());
        txtDescripcion.setText(i.getDescripcion());
        txtPreciosCompraSinIva.setText(i.getPreciosCompra_sinIva());
        txtPreciosCompraConIva.setText(i.getPreciosCompra_conIva());
        txtPrecioMayorista.setText(i.getPrecioMayorista());
        txtPrecioClienteFijo.setText(i.getPrecioClienteFijo());
        txtPrecioClienteNormal.setText(i.getPrecioClienteNormal());
        inventariosEditarEliminar = i;
    }
}
